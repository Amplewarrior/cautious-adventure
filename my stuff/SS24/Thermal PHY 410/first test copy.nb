(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     41380,        843]
NotebookOptionsPosition[     40603,        821]
NotebookOutlinePosition[     41068,        838]
CellTagsIndexPosition[     41025,        835]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"1", "+", "1"}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"f62a28b2-7d1d-472b-a39b-13878c3f66c8"]], \
"WolframAlphaLong",
 CellChangeTimes->{{3.91398815676923*^9, 3.9139881595547266`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7e588fa8-9632-442a-9904-fe2f84deb503"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "1 + 1", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"1 + 1"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"1", "+", "1"}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Simplification", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox["2", HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                GrayLevel[0.6], 
                PointSize[Medium], 
                PointBox[{{0, 0}, {1, 0}}]}, 
               StyleBox[
                InsetBox[
                 FormBox[
                  StyleBox[
                   TagBox["1", #& ], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], 
                 NCache[{
                   Rational[1, 2], 0.18252000000000002`}, {0.5, 
                  0.18252000000000002`}]], 12, StripOnInput -> False], {
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1], 
                ArrowBox[
                 BezierCurveBox[
                  NCache[{{0, 0}, {
                    Rational[1, 2], 0.2808}, {1, 0}}, {{0, 0}, {0.5, 
                    0.2808}, {1, 0}}]]]}}, {{
                RGBColor[1, 0, 0], 
                PointSize[Large], 
                PointBox[{2, 0}]}, 
               StyleBox[
                InsetBox[
                 FormBox[
                  StyleBox[
                   TagBox["1", #& ], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], 
                 NCache[{
                   Rational[3, 2], 0.18252000000000002`}, {1.5, 
                  0.18252000000000002`}]], 12, StripOnInput -> False], {
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1], 
                ArrowBox[
                 BezierCurveBox[
                  NCache[{{1, 0}, {
                    Rational[3, 2], 0.2808}, {2, 0}}, {{1, 0}, {1.5, 
                    0.2808}, {2, 0}}]]]}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Axes -> {True, False}, 
              PlotRange -> {{-0.10000000000000009`, 2.1}, Automatic}, 
              Ticks -> {{{-1, 
                  FormBox[
                   RowBox[{"-", "1"}], TraditionalForm]}, {0, 
                  FormBox["0", TraditionalForm]}, {1, 
                  FormBox["1", TraditionalForm]}, {2, 
                  FormBox["2", TraditionalForm]}, {3, 
                  FormBox["3", TraditionalForm]}}, Automatic}, 
              ImageSize -> {330., Automatic}, AxesStyle -> {}, 
              PlotRangePadding -> {
                Scaled[0.05], 0}, AxesOrigin -> {0, 0}, 
              Method -> {"AxesInFront" -> False}}, TicksStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Integer", "id" -> 
     "NumberName", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"IntegerName[2, \"Words\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"two\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Manipulatives illustration", "scanner" -> "Arithmetic",
      "id" -> "Illustration", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{
                    GeometricTransformationBox[{
                    RGBColor[0.43, 0.63, 0.1], 
                    RectangleBox[{0, 0}, {1, 1}], 
                    RGBColor[0.14, 0.43, 0.24], 
                    Thickness[Small], 
                    
                    LineBox[{{{0, 0}, {1, 0}}, {{0, 1}, {1, 1}}, {{0, 0}, {0, 
                    1}}, {{1, 0}, {1, 1}}}]}, {-1.5, 2.7269230769230766`}]}, 
                   PlotRange -> {{-2, 0}, {1.8166666666666664`, 
                    4.433333333333334}}, ImageSize -> 12.6, BaselinePosition -> 
                   Bottom, TicksStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]}, "Row", 
                 DisplayFunction -> (
                  FrameBox[#, FrameMargins -> 0, FrameStyle -> {
                    Directive[
                    GrayLevel[0.85]], 
                    Directive[
                    Thickness[Small]]}]& ), InterpretationFunction -> (RowBox[{
                    StyleBox["Row", FontFamily -> "Roboto", FontSize -> 13], 
                    "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{
                    StyleBox["Frame", FontFamily -> "Roboto", FontSize -> 13],
                     "\[Rule]", "True"}], ",", 
                    RowBox[{
                    StyleBox[
                    "FrameStyle", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    "Directive", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{
                    StyleBox[
                    "Directive", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    RowBox[{
                    StyleBox[
                    "Thickness", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    StyleBox["Small", FontFamily -> "Roboto", FontSize -> 13],
                     "]"}], "]"}]}], "}"}]}], ",", 
                    RowBox[{
                    StyleBox[
                    "FrameMargins", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", "0"}], ",", 
                    RowBox[{
                    StyleBox[
                    "ImageMargins", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", "0"}]}], "]"}]& )], "\"+\"", 
                TemplateBox[{
                  GraphicsBox[{
                    GeometricTransformationBox[{
                    RGBColor[0.43, 0.63, 0.1], 
                    RectangleBox[{0, 0}, {1, 1}], 
                    RGBColor[0.14, 0.43, 0.24], 
                    Thickness[Small], 
                    
                    LineBox[{{{0, 0}, {1, 0}}, {{0, 1}, {1, 1}}, {{0, 0}, {0, 
                    1}}, {{1, 0}, {1, 1}}}]}, {-1.5, 2.7269230769230766`}]}, 
                   PlotRange -> {{-2, 0}, {1.8166666666666664`, 
                    4.433333333333334}}, ImageSize -> 12.6, BaselinePosition -> 
                   Bottom, TicksStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]}, "Row", 
                 DisplayFunction -> (
                  FrameBox[#, FrameMargins -> 0, FrameStyle -> {
                    Directive[
                    GrayLevel[0.85]], 
                    Directive[
                    Thickness[Small]]}]& ), InterpretationFunction -> (RowBox[{
                    StyleBox["Row", FontFamily -> "Roboto", FontSize -> 13], 
                    "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{
                    StyleBox["Frame", FontFamily -> "Roboto", FontSize -> 13],
                     "\[Rule]", "True"}], ",", 
                    RowBox[{
                    StyleBox[
                    "FrameStyle", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    "Directive", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{
                    StyleBox[
                    "Directive", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    RowBox[{
                    StyleBox[
                    "Thickness", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    StyleBox["Small", FontFamily -> "Roboto", FontSize -> 13],
                     "]"}], "]"}]}], "}"}]}], ",", 
                    RowBox[{
                    StyleBox[
                    "FrameMargins", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", "0"}], ",", 
                    RowBox[{
                    StyleBox[
                    "ImageMargins", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", "0"}]}], "]"}]& )], "\"\[LongEqual]\"", 
                TemplateBox[{
                  GraphicsBox[{
                    GeometricTransformationBox[{
                    RGBColor[0.43, 0.63, 0.1], 
                    RectangleBox[{0, 0}, {1, 1}], 
                    RGBColor[0.14, 0.43, 0.24], 
                    Thickness[Small], 
                    
                    LineBox[{{{0, 0}, {1, 0}}, {{0, 1}, {1, 1}}, {{0, 0}, {0, 
                    1}}, {{1, 0}, {1, 1}}}]}, {-1.5, 2.7269230769230766`}], 
                    GeometricTransformationBox[{
                    RGBColor[0.43, 0.63, 0.1], 
                    RectangleBox[{0, 0}, {1, 1}], 
                    RGBColor[0.14, 0.43, 0.24], 
                    Thickness[Small], 
                    
                    LineBox[{{{0, 0}, {1, 0}}, {{0, 1}, {1, 1}}, {{0, 0}, {0, 
                    1}}, {{1, 0}, {1, 1}}}]}, {0, 2.7269230769230766`}]}, 
                   PlotRange -> {{-2, 1.7}, {1.8166666666666664`, 
                    4.433333333333334}}, ImageSize -> 22.4, BaselinePosition -> 
                   Bottom, TicksStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]}, "Row", 
                 DisplayFunction -> (
                  FrameBox[#, FrameMargins -> 0, FrameStyle -> {
                    Directive[
                    GrayLevel[0.85]], 
                    Directive[
                    Thickness[Small]]}]& ), InterpretationFunction -> (RowBox[{
                    StyleBox["Row", FontFamily -> "Roboto", FontSize -> 13], 
                    "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{
                    StyleBox["Frame", FontFamily -> "Roboto", FontSize -> 13],
                     "\[Rule]", "True"}], ",", 
                    RowBox[{
                    StyleBox[
                    "FrameStyle", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    "Directive", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{
                    StyleBox[
                    "Directive", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    RowBox[{
                    StyleBox[
                    "Thickness", FontFamily -> "Roboto", FontSize -> 13], "[", 
                    StyleBox["Small", FontFamily -> "Roboto", FontSize -> 13],
                     "]"}], "]"}]}], "}"}]}], ",", 
                    RowBox[{
                    StyleBox[
                    "FrameMargins", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", "0"}], ",", 
                    RowBox[{
                    StyleBox[
                    "ImageMargins", FontFamily -> "Roboto", FontSize -> 13], 
                    "\[Rule]", "0"}]}], "]"}]& )]}, {
                StyleBox["1", {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], "\"\"", 
                StyleBox["1", {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], "\"\"", 
                StyleBox["2", {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, AutoDelete -> False, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}], 
             "Grid"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Typical human computation times", "scanner" -> 
     "Arithmetic", "id" -> "TypicalHumanComputationTimes", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"HumanComputationQuery"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox[
                    "\"age\[NonBreakingSpace]6:\[NonBreakingSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.2", "SRString" -> "3.2"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"seconds\"", {
                    FontFamily -> "Roboto", FontSize -> 0.9 Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowWithSeparators"], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox[
                    "\"age\[NonBreakingSpace]8:\[NonBreakingSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.8", "SRString" -> "1.8"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"seconds\"", {
                    FontFamily -> "Roboto", FontSize -> 0.9 Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowWithSeparators"], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox[
                    "\"age\[NonBreakingSpace]10:\[NonBreakingSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"seconds\"", {
                    FontFamily -> "Roboto", FontSize -> 0.9 Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowWithSeparators"], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox[
                    "\"\\nage\[NonBreakingSpace]18:\[NonBreakingSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.83", "SRString" -> "0.83"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"seconds\"", {
                    FontFamily -> "Roboto", FontSize -> 0.9 Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowWithSeparators"]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"ignoring concentration, repetition, variations in \
education, etc.\"", "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More details", "input" -> 
         "TypicalHumanComputationTimes__More details"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
HumanComputationQuerySourceInformationNotes.html", "text" -> 
        "Human computation query"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.666", "parsetiming" -> "0.106", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP30201ha71bfi7271ec7300004eie1987b8de92ea", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "9", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa30211ha71bfi7271ec730000310429e78751di141494138648170584556", "version" -> 
    "2.6", "inputstring" -> "1 + 1"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2024, 1, 11, 13, 56, 8.640093`8.689093384490999}, "Line" -> 1, 
    "SessionID" -> 24661935235787378925}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = "1 + 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{507., {240.3544921875, 245.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.913988168712998*^9},ExpressionUUID->"5ffd83fa-73aa-4615-ad26-\
6dd4c4b077a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Random", "[", "]"}]], "Input",
 CellChangeTimes->{{3.913988208688952*^9, 3.9139882156858225`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b7d297bd-4e93-49c1-bee9-0ed0fc90b8d7"],

Cell[BoxData["0.41408221909371945`"], "Output",
 CellChangeTimes->{3.913988218405755*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f11fde83-1d11-41a0-9298-1f4e3a407436"]
}, Open  ]]
},
WindowSize->{571.8, 510.},
WindowMargins->{{284.4, Automatic}, {11.399999999999977`, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4e455b9d-ec6e-43ac-b559-e3247268712e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 340, 7, 41, "WolframAlphaLong",ExpressionUUID->"7e588fa8-9632-442a-9904-fe2f84deb503"],
Cell[923, 31, 39257, 775, 496, "Print",ExpressionUUID->"5ffd83fa-73aa-4615-ad26-6dd4c4b077a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40217, 811, 200, 3, 28, "Input",ExpressionUUID->"b7d297bd-4e93-49c1-bee9-0ed0fc90b8d7"],
Cell[40420, 816, 167, 2, 55, "Output",ExpressionUUID->"f11fde83-1d11-41a0-9298-1f4e3a407436"]
}, Open  ]]
}
]
*)

